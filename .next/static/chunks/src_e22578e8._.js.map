{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/sandile/NFT_App/src/hooks/useAuth.ts"],"sourcesContent":["// src/hooks/useAuth.ts\n'use client';\n\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useUser } from '@/context/UserContext';\n\nexport function useAuth(redirectTo: string = '/login') {\n  const { currentUser } = useUser();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (!currentUser) {\n      router.push(redirectTo);\n    }\n  }, [currentUser, router, redirectTo]);\n\n  return currentUser;\n}"],"names":[],"mappings":"AAAA,uBAAuB;;;;;AAGvB;AACA;AACA;;AAJA;;;;AAMO,SAAS;QAAQ,aAAA,iEAAqB;;IAC3C,MAAM,EAAE,WAAW,EAAE,GAAG,IAAA,4IAAO;IAC/B,MAAM,SAAS,IAAA,kJAAS;IAExB,IAAA,0KAAS;6BAAC;YACR,IAAI,CAAC,aAAa;gBAChB,OAAO,IAAI,CAAC;YACd;QACF;4BAAG;QAAC;QAAa;QAAQ;KAAW;IAEpC,OAAO;AACT;GAXgB;;QACU,4IAAO;QAChB,kJAAS","debugId":null}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///home/sandile/NFT_App/src/utils/mintNFT.ts"],"sourcesContent":["import { createPublicClient, encodeFunctionData, http, parseAbi } from \"viem\";\nimport { privateKeyToAccount } from \"viem/accounts\";\nimport { scrollSepolia } from \"viem/chains\";\nimport { signerToEcdsaValidator } from \"@zerodev/ecdsa-validator\";\nimport {\n  createKernelAccount,\n  createKernelAccountClient,\n  createZeroDevPaymasterClient,\n} from \"@zerodev/sdk\";\nimport { getEntryPoint, KERNEL_V3_1 } from \"@zerodev/sdk/constants\";\n\nconst ZERODEV_RPC = process.env.NEXT_PUBLIC_ZERODEV_RPC!;\nconst SCROLL_RPC = process.env.NEXT_PUBLIC_SCROLL_RPC!;\n\nconst contractAddress = \"0x5b9DF92f3F9cAFa7d804f81FA9A5db68cc0AE52a\";\nconst contractABI = parseAbi([\n  \"function safeMint(address _to) public\",\n  \"function balanceOf(address owner) external view returns (uint256 balance)\",\n]);\n\nconst chain = scrollSepolia;\n\nconst publicClient = createPublicClient({\n  transport: http(SCROLL_RPC),\n  chain,\n});\n\nconst entryPoint = getEntryPoint(\"0.7\");\n\nexport const mintNFT = async (privateKey: `0x${string}`) => {\n  try {\n    console.log(\"üîß Starting mintNFT function...\");\n    console.log(\"üì° Using ZeroDev RPC:\", ZERODEV_RPC);\n    console.log(\"üì° Using Scroll RPC:\", SCROLL_RPC);\n    \n    const userSigner = privateKeyToAccount(privateKey);\n    console.log(\"‚úÖ EOA address:\", userSigner.address);\n\n    const ecdsaValidator = await signerToEcdsaValidator(publicClient, {\n      signer: userSigner,\n      entryPoint,\n      kernelVersion: KERNEL_V3_1,\n    });\n\n    const account = await createKernelAccount(publicClient, {\n      entryPoint,\n      plugins: {\n        sudo: ecdsaValidator,\n      },\n      kernelVersion: KERNEL_V3_1,\n    });\n\n    console.log(\"‚úÖ Smart account address:\", account.address);\n\n    const zerodevPaymaster = createZeroDevPaymasterClient({\n      chain,\n      transport: http(ZERODEV_RPC),\n    });\n\n    const kernelClient = createKernelAccountClient({\n      account,\n      chain,\n      bundlerTransport: http(ZERODEV_RPC),\n      paymaster: {\n        getPaymasterData(userOperation) {\n          console.log(\"üîÑ Getting paymaster data...\");\n          return zerodevPaymaster.sponsorUserOperation({ userOperation });\n        },\n      },\n    });\n\n    const currentBalance = await publicClient.readContract({\n      address: contractAddress,\n      abi: contractABI,\n      functionName: \"balanceOf\",\n      args: [account.address],\n    });\n    console.log(\"üìä Current NFT balance:\", currentBalance);\n\n    // THe call data of the UserOp\n    const userOpHash = await kernelClient.sendUserOperation({\n      callData: await kernelClient.account.encodeCalls([\n        {\n          to: contractAddress,\n          value: BigInt(0),\n          data: encodeFunctionData({\n            abi: contractABI,\n            functionName: \"safeMint\",\n            args: [account.address],\n          }),\n        },\n      ]),\n    });\n    console.log(\"‚úÖ UserOp submitted:\", userOpHash);\n\n    const receipt = await kernelClient.waitForUserOperationReceipt({\n      hash: userOpHash,\n    });\n    console.log(\"‚úÖ Transaction confirmed:\", receipt.receipt.transactionHash);\n\n    const newBalance = await publicClient.readContract({\n      address: contractAddress,\n      abi: contractABI,\n      functionName: \"balanceOf\",\n      args: [account.address],\n    });\n    console.log(\"üìä New NFT balance:\", newBalance);\n\n    return { \n      success: true, \n      transactionHash: receipt.receipt.transactionHash,\n      newBalance: Number(newBalance)\n    };\n    \n  } catch (error) {\n    console.error(\"‚ùå Detailed minting error:\", error);\n    const errorMessage = error instanceof Error ? error.message : \"Unknown error\";\n    return { \n      success: false, \n      error: errorMessage,\n      transactionHash: null,\n      newBalance: null\n    };\n  }\n};"],"names":[],"mappings":";;;;AAWoB;AAXpB;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAKA;;;;;;;AAEA,MAAM;AACN,MAAM;AAEN,MAAM,kBAAkB;AACxB,MAAM,cAAc,IAAA,sLAAQ,EAAC;IAC3B;IACA;CACD;AAED,MAAM,QAAQ,0LAAa;AAE3B,MAAM,eAAe,IAAA,sLAAkB,EAAC;IACtC,WAAW,IAAA,wKAAI,EAAC;IAChB;AACF;AAEA,MAAM,aAAa,IAAA,yKAAa,EAAC;AAE1B,MAAM,UAAU,OAAO;IAC5B,IAAI;QACF,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC,yBAAyB;QACrC,QAAQ,GAAG,CAAC,wBAAwB;QAEpC,MAAM,aAAa,IAAA,yLAAmB,EAAC;QACvC,QAAQ,GAAG,CAAC,kBAAkB,WAAW,OAAO;QAEhD,MAAM,iBAAiB,MAAM,IAAA,8MAAsB,EAAC,cAAc;YAChE,QAAQ;YACR;YACA,eAAe,uKAAW;QAC5B;QAEA,MAAM,UAAU,MAAM,IAAA,+MAAmB,EAAC,cAAc;YACtD;YACA,SAAS;gBACP,MAAM;YACR;YACA,eAAe,uKAAW;QAC5B;QAEA,QAAQ,GAAG,CAAC,4BAA4B,QAAQ,OAAO;QAEvD,MAAM,mBAAmB,IAAA,yMAA4B,EAAC;YACpD;YACA,WAAW,IAAA,wKAAI,EAAC;QAClB;QAEA,MAAM,eAAe,IAAA,0MAAyB,EAAC;YAC7C;YACA;YACA,kBAAkB,IAAA,wKAAI,EAAC;YACvB,WAAW;gBACT,kBAAiB,aAAa;oBAC5B,QAAQ,GAAG,CAAC;oBACZ,OAAO,iBAAiB,oBAAoB,CAAC;wBAAE;oBAAc;gBAC/D;YACF;QACF;QAEA,MAAM,iBAAiB,MAAM,aAAa,YAAY,CAAC;YACrD,SAAS;YACT,KAAK;YACL,cAAc;YACd,MAAM;gBAAC,QAAQ,OAAO;aAAC;QACzB;QACA,QAAQ,GAAG,CAAC,2BAA2B;QAEvC,8BAA8B;QAC9B,MAAM,aAAa,MAAM,aAAa,iBAAiB,CAAC;YACtD,UAAU,MAAM,aAAa,OAAO,CAAC,WAAW,CAAC;gBAC/C;oBACE,IAAI;oBACJ,OAAO,OAAO;oBACd,MAAM,IAAA,2LAAkB,EAAC;wBACvB,KAAK;wBACL,cAAc;wBACd,MAAM;4BAAC,QAAQ,OAAO;yBAAC;oBACzB;gBACF;aACD;QACH;QACA,QAAQ,GAAG,CAAC,uBAAuB;QAEnC,MAAM,UAAU,MAAM,aAAa,2BAA2B,CAAC;YAC7D,MAAM;QACR;QACA,QAAQ,GAAG,CAAC,4BAA4B,QAAQ,OAAO,CAAC,eAAe;QAEvE,MAAM,aAAa,MAAM,aAAa,YAAY,CAAC;YACjD,SAAS;YACT,KAAK;YACL,cAAc;YACd,MAAM;gBAAC,QAAQ,OAAO;aAAC;QACzB;QACA,QAAQ,GAAG,CAAC,uBAAuB;QAEnC,OAAO;YACL,SAAS;YACT,iBAAiB,QAAQ,OAAO,CAAC,eAAe;YAChD,YAAY,OAAO;QACrB;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAC9D,OAAO;YACL,SAAS;YACT,OAAO;YACP,iBAAiB;YACjB,YAAY;QACd;IACF;AACF","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///home/sandile/NFT_App/src/app/dashboard/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { useUser } from '@/context/UserContext';\nimport { useAuth } from '@/hooks/useAuth';\nimport { mintNFT } from '@/utils/mintNFT';\n\n\ninterface NFT {\n  id: number;\n  name: string;\n  description: string;\n  image: string;\n  charity?: string;\n  charityId?: number;\n  price?: string;\n  emoji?: string;\n  color?: string;\n}\n\nexport default function Dashboard() {\n  const [nfts, setNfts] = useState<NFT[]>([]);\n  const [userNfts, setUserNfts] = useState<NFT[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState<'available' | 'owned'>('available');\n  const [mintingStatus, setMintingStatus] = useState<{ [key: number]: string }>({});\n  const { currentUser, logout, updateUserNFTs } = useUser();\n  \n  useAuth();\n\n\nconst fetchNFTs = async () => {\n    if (!currentUser) return;\n\n    try {\n      // Fetch the metadata file once\n      const response = await fetch('/nft_metadata.json');\n      const data = await response.json();\n      \n      // Extract charities - this exists in your file\n      const charityData = data.charities || [];\n      \n      // Since there's no NFTs array in your file, we'll generate them dynamically\n      const generatedNfts: NFT[] = [];\n      \n      // Generate 21 NFTs (one for each charity) or more if you want\n      for (let i = 0; i < charityData.length; i++) {\n        const charity = charityData[i];\n        \n        generatedNfts.push({\n          id: i + 1,\n          name: `${charity.name} NFT #${i + 1}`,\n          description: `This exclusive NFT supports ${charity.name}. ${charity.description}`,\n          image: '', \n          charity: charity.name,\n          charityId: charity.id,\n          price: charity.price,\n          emoji: charity.emoji,\n          color: charity.color.replace('bg-', '') // Remove Tailwind classes for color\n        });\n      }\n      \n      const totalNfts = 50; \n      const nftsWithCharity = [];\n      \n      for (let i = 0; i < totalNfts; i++) {\n        const charityIndex = i % charityData.length;\n        const charity = charityData[charityIndex];\n        \n        nftsWithCharity.push({\n          id: i + 1,\n          name: `${charity.name} NFT #${i + 1}`,\n          description: `This exclusive NFT supports ${charity.name}. ${charity.description}`,\n          image: '',\n          charity: charity.name,\n          charityId: charity.id,\n          price: charity.price,\n          emoji: charity.emoji,\n          color: charity.color.replace('bg-', '') \n        });\n      }\n      \n      setNfts(nftsWithCharity);\n      \n      if (currentUser.ownedNFTs) {\n        const ownedNfts = nftsWithCharity.filter(nft => \n          currentUser.ownedNFTs?.includes(nft.id)\n        );\n        setUserNfts(ownedNfts);\n      }\n      \n    } catch (error) {\n      console.error('Error fetching NFTs:', error);\n      \n      // Fallback with basic NFT generation\n      const fallbackNfts: NFT[] = [];\n      const fallbackCharities = [\n        { id: 1, name: \"Default Charity\", description: \"Supporting good causes\", price: \"0.1 ETH\", emoji: \"‚ù§Ô∏è\", color: \"#ff0000\" }\n      ];\n      \n      for (let i = 0; i < 10; i++) {\n        const charityIndex = i % fallbackCharities.length;\n        const charity = fallbackCharities[charityIndex];\n        \n        fallbackNfts.push({\n          id: i,\n          name: `${charity.name} NFT #${i}`,\n          description: `This NFT supports ${charity.name}.`,\n          image: '',\n          charity: charity.name,\n          charityId: charity.id,\n          price: charity.price,\n          emoji: charity.emoji,\n          color: charity.color\n        });\n      }\n      setNfts(fallbackNfts);\n      \n      if (currentUser.ownedNFTs) {\n        const ownedNfts = fallbackNfts.filter(nft => \n          currentUser.ownedNFTs?.includes(nft.id)\n        );\n        setUserNfts(ownedNfts);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchNFTs();\n  }, [currentUser]);\n\n  const handleMint = async (nftId: number) => {\n    if (!currentUser?.privateKey) {\n      console.log('User not authenticated or private key missing');\n      return;\n    }\n\n    setMintingStatus(prev => ({ ...prev, [nftId]: 'minting' }));\n\n    try {\n      const result = await mintNFT(currentUser.privateKey as `0x${string}`);\n      \n      if (result.success) {\n        setMintingStatus(prev => ({ ...prev, [nftId]: 'success' }));\n        \n        // Update user's owned NFTs in context\n        const success = await updateUserNFTs(nftId);\n        \n        if (success) {\n          // Update local UI state\n          const mintedNft = nfts.find(nft => nft.id === nftId);\n          if (mintedNft) {\n            setUserNfts(prev => [...prev, mintedNft]);\n          }\n          console.log(`NFT #${nftId} minted successfully! Transaction: ${result.transactionHash}`);\n        }\n      } else {\n        setMintingStatus(prev => ({ ...prev, [nftId]: 'error' }));\n        console.log('Minting failed');\n      }\n    } catch (error) {\n      console.error('Minting error:', error);\n      setMintingStatus(prev => ({ ...prev, [nftId]: 'error' }));\n      console.log('Minting failed: ' + (error as Error).message);\n    } finally {\n      // Clear status after 3 seconds\n      setTimeout(() => {\n        setMintingStatus(prev => ({ ...prev, [nftId]: '' }));\n      }, 3000);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-blue-800 to-purple-900 flex items-center justify-center\">\n        <div className=\"text-gray-700 text-xl flex items-center\">\n          <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-gray-700\" fill=\"none\" viewBox=\"0 0 24 24\">\n            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n            <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n          </svg>\n          Loading your NFTs...\n        </div>\n      </div>\n    );\n  }\n\n  if (!currentUser) {\n    return null;\n  }\n\n  return (\n    <div className=\"min-h-screen screen bg-gradient-to-br from-[#F7C6D9] to-[#FFEFF3]\">\n      {/* Header */}\n      <div className=\"container mx-auto px-4 py-6\">\n        <div className=\"flex flex-col md:flex-row justify-between items-center mb-8 gap-4\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-700\">üé® Your NFT Dashboard</h1>\n            <p className=\"text-purple-200 mt-1\">Support charities through digital collectibles</p>\n          </div>\n          \n          <div className=\"bg-white/60 backdrop-blur-md rounded-xl p-4 border border-white/90\">\n            <div className=\"text-gray-700 text-right\">\n              <p className=\"font-semibold\">{currentUser.username}</p>\n              <p className=\"text-sm text-gray-900\">{userNfts.length} NFTs owned</p>\n              <p className=\"text-xs opacity-80 truncate max-w-xs mt-1\">{currentUser.smartAccountAddress}</p>\n              <div className=\"flex gap-2 mt-3 justify-end\">\n                <button \n                  onClick={logout}\n                  className=\"px-3 py-1 bg-red-500/80 text-gray-700 rounded-lg text-sm hover:bg-red-600 transition\"\n                >\n                  Logout\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mb-8\">\n          <Link \n            href=\"/\"\n            className=\"bg-pink-500 text-gray-700 px-4 py-2 rounded-lg hover:bg-white/20 transition inline-flex items-center border border-white/20\"\n          >\n            <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"></path>\n            </svg>\n            Back to Home\n          </Link>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"flex mb-8 bg-pink-500 backdrop-blur-md rounded-xl p-1 border border-white/20 w-fit\">\n          <button\n            onClick={() => setActiveTab('available')}\n            className={`px-6 py-2 rounded-lg transition ${\n              activeTab === 'available' \n                ? 'bg-gradient-to-r from-purple-600 to-pink-500 text-gray-700' \n                : 'text-gray-700/70 hover:text-gray-700'\n            }`}\n          >\n            Available NFTs\n          </button>\n          <button\n            onClick={() => setActiveTab('owned')}\n            className={`px-6 py-2 rounded-lg transition ${\n              activeTab === 'owned' \n                ? 'bg-gradient-to-r from-purple-600 to-pink-500 text-gray-700' \n                : 'text-gray-700/70 hover:text-gray-700'\n            }`}\n          >\n            Your Collection ({userNfts.length})\n          </button>\n        </div>\n\n{/* Available NFTs */}\n{activeTab === 'available' && (\n  <div className=\"mb-8\">\n<h2 className=\"text-2xl font-bold text-gray-700 mb-6 flex items-center\">\n  <svg \n    width=\"20\" \n    height=\"20\" \n    viewBox=\"0 0 14 14\" \n    fill=\"none\" \n    stroke=\"currentColor\"\n    className=\"mr-3\" \n  >\n    <rect x=\"1\" y=\"4\" width=\"12\" height=\"8\" rx=\"1\" />\n    <path d=\"M4 4V2C4 1 5 0 6 0H8C9 0 10 1 10 2V4\" />\n    <path d=\"M1 6H13\" />\n  </svg>\n  Available NFT Collection\n</h2>\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n      {nfts.map((nft) => {\n        const isOwned = userNfts.some(owned => owned.id === nft.id);\n        const status = mintingStatus[nft.id];\n        \nreturn (\n  <div key={nft.id} className=\"group bg-white/10 backdrop-blur-lg border border-white/20 rounded-2xl overflow-hidden transition-all duration-500 hover:shadow-2xl hover:bg-white/15 h-[400px] relative\">\n    {/* Glow effect on hover */}\n    <div className=\"absolute inset-0 bg-gradient-to-br from-purple-400/10 to-pink-400/10 opacity-0 group-hover:opacity-100 transition-opacity duration-500 rounded-2xl\"></div>\n    \n    {/* Image/Emoji Container */}\n    <div className={`h-3/4 ${nft.color || 'bg-gradient-to-br from-purple-500/20 to-pink-500/20'} relative overflow-hidden flex items-center justify-center`}>\n      {/* Background pattern */}\n      <div className=\"absolute inset-0 opacity-10\">\n        <div className=\"absolute top-0 left-0 w-full h-full bg-[radial-gradient(circle_at_1px_1px,rgba(255,255,255,0.15)_1px,transparent_0)] bg-[length:20px_20px]\"></div>\n      </div>\n      \n      {/* Main emoji/content */}\n      <div className=\"relative z-10\">\n        <span className=\"text-6xl transition-all duration-500 group-hover:scale-110 group-hover:rotate-3 filter drop-shadow-lg\">\n          {nft.emoji || 'üé®'}\n        </span>\n      </div>\n      \n      {/* Status badge - positioned top right */}\n      <div className=\"absolute top-3 right-3 z-20\">\n        <span className={`px-3 py-1 rounded-full text-xs font-medium backdrop-blur-md ${\n          isOwned \n            ? 'bg-green-500/30 text-green-100 border border-green-500/50' \n            : 'bg-white/20 text-white/90 border border-white/30'\n        }`}>\n          {isOwned ? 'Owned' : 'Available'}\n        </span>\n      </div>\n      \n      {/* Hover effect overlay */}\n      <div className=\"absolute inset-0 bg-gradient-to-t from-black/90 via-black/40 to-transparent opacity-0 transition-all duration-500 group-hover:opacity-100 flex flex-col justify-end p-5\">\n        <h3 className=\"font-bold text-white text-xl mb-2\">{nft.name}</h3>\n        <p className=\"text-white/80 text-sm mb-3 line-clamp-2\">{nft.description}</p>\n        \n        <div className=\"mb-3\">\n          <span className=\"text-xs text-white/70 bg-white/10 px-2 py-1 rounded-md\">\n            Supports: {nft.charity}\n          </span>\n        </div>\n        \n        {!isOwned && (\n          <button\n            onClick={() => handleMint(nft.id)}\n            disabled={status === 'minting' || status === 'success'}\n            className=\"w-full bg-gradient-to-r from-purple-500 to-pink-500 text-white py-2.5 px-4 rounded-xl font-medium hover:from-purple-600 hover:to-pink-600 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-offset-2 focus:ring-offset-black/50 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 flex items-center justify-center shadow-lg hover:shadow-purple-500/25\"\n          >\n            {status === 'minting' ? (\n              <>\n                <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Minting...\n              </>\n            ) : status === 'success' ? (\n              <>\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\n                </svg>\n                Minted!\n              </>\n            ) : status === 'error' ? (\n              'Try Again'\n            ) : (\n              'Mint NFT'\n            )}\n          </button>\n        )}\n      </div>\n    </div>\n    \n    {/* Bottom info section */}\n    <div className=\"p-4 bg-white/5 backdrop-blur-sm h-1/4 flex flex-col justify-center\">\n      <div className=\"flex justify-between items-center mb-1\">\n        <h3 className=\"font-bold text-white text-lg truncate\">{nft.name}</h3>\n        <span className=\"text-white font-bold text-lg bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent\">\n          {nft.price}\n        </span>\n      </div>\n      \n      <div className=\"flex justify-between items-center text-sm text-white/70\">\n        <span>ID: #{nft.id}</span>\n        <div className=\"flex items-center\">\n          <svg className=\"w-3 h-3 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v3.586L7.707 9.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 10.586V7z\" clipRule=\"evenodd\"></path>\n          </svg>\n          Supports {nft.charity}\n        </div>\n      </div>\n    </div>\n  </div>\n);    \n      })}\n    </div>\n  </div>\n)}\n        {/* User's NFT Collection */}\n        {activeTab === 'owned' && (\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-700 mb-6 flex items-center\">\n              <svg className=\"w-6 h-6 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z\"></path>\n              </svg>\n              Your NFT Collection\n            </h2>\n            {userNfts.length > 0 ? (\n              <div className=\"bg-white/10 backdrop-blur-md border border-white/20 rounded-2xl p-6\">\n                <p className=\"text-center text-purple-200 mb-6 text-lg\">\n                  You own {userNfts.length} charity NFT{userNfts.length !== 1 ? 's' : ''}!\n                </p>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4\">\n                  {userNfts.map((nft) => (\n                    <div key={nft.id} className=\"bg-white/5 border border-white/10 rounded-xl p-3 text-center transition hover:scale-105\">\n                      <div className={`h-32 w-full mb-3 rounded-lg flex items-center justify-center ${nft.color || 'bg-purple-500'}`}>\n                        <span className=\"text-4xl\">{nft.emoji || 'üé®'}</span>\n                      </div>\n                      <h4 className=\"font-semibold text-gray-700 text-sm truncate\">{nft.name}</h4>\n                      <p className=\"text-xs text-purple-200 mt-1\">ID: #{nft.id}</p>\n                      <p className=\"text-xs text-gray-700/60 mt-2 truncate\">Supports: {nft.charity}</p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <div className=\"bg-white/10 backdrop-blur-md border border-white/20 rounded-2xl p-8 text-center\">\n                <div className=\"text-5xl mb-4\">üé®</div>\n                <p className=\"text-purple-200 text-lg mb-4\">You don&apos;t own any NFTs yet.</p>\n                <p className=\"text-gray-700/70 mb-6\">Mint your first NFT to support a charitable cause!</p>\n                <button\n                  onClick={() => setActiveTab('available')}\n                  className=\"bg-gradient-to-r from-purple-600 to-pink-500 text-gray-700 py-2 px-6 rounded-lg hover:from-purple-700 hover:to-pink-600 transition\"\n                >\n                  Browse NFTs\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}