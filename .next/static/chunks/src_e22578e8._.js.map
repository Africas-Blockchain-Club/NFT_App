{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/sandile/NFT_App/src/hooks/useAuth.ts"],"sourcesContent":["// src/hooks/useAuth.ts\n'use client';\n\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useUser } from '@/context/UserContext';\n\nexport function useAuth(redirectTo: string = '/login') {\n  const { currentUser } = useUser();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (!currentUser) {\n      router.push(redirectTo);\n    }\n  }, [currentUser, router, redirectTo]);\n\n  return currentUser;\n}"],"names":[],"mappings":"AAAA,uBAAuB;;;;;AAGvB;AACA;AACA;;AAJA;;;;AAMO,SAAS;QAAQ,aAAA,iEAAqB;;IAC3C,MAAM,EAAE,WAAW,EAAE,GAAG,IAAA,4IAAO;IAC/B,MAAM,SAAS,IAAA,kJAAS;IAExB,IAAA,0KAAS;6BAAC;YACR,IAAI,CAAC,aAAa;gBAChB,OAAO,IAAI,CAAC;YACd;QACF;4BAAG;QAAC;QAAa;QAAQ;KAAW;IAEpC,OAAO;AACT;GAXgB;;QACU,4IAAO;QAChB,kJAAS","debugId":null}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///home/sandile/NFT_App/src/utils/mintNFT.ts"],"sourcesContent":["import { createPublicClient, encodeFunctionData, http, parseAbi } from \"viem\";\nimport { privateKeyToAccount } from \"viem/accounts\";\nimport { scrollSepolia } from \"viem/chains\";\nimport { signerToEcdsaValidator } from \"@zerodev/ecdsa-validator\";\nimport {\n  createKernelAccount,\n  createKernelAccountClient,\n  createZeroDevPaymasterClient,\n} from \"@zerodev/sdk\";\nimport { getEntryPoint, KERNEL_V3_1 } from \"@zerodev/sdk/constants\";\n\nconst ZERODEV_RPC = process.env.NEXT_PUBLIC_ZERODEV_RPC!;\nconst SCROLL_RPC = process.env.NEXT_PUBLIC_SCROLL_RPC!;\n\nconst contractAddress = \"0x5b9DF92f3F9cAFa7d804f81FA9A5db68cc0AE52a\";\nconst contractABI = parseAbi([\n  \"function safeMint(address _to) public\",\n  \"function balanceOf(address owner) external view returns (uint256 balance)\",\n]);\n\nconst chain = scrollSepolia;\n\nconst publicClient = createPublicClient({\n  transport: http(SCROLL_RPC),\n  chain,\n});\n\nconst entryPoint = getEntryPoint(\"0.7\");\n\nexport const mintNFT = async (privateKey: `0x${string}`) => {\n  try {\n    console.log(\"üîß Starting mintNFT function...\");\n    console.log(\"üì° Using ZeroDev RPC:\", ZERODEV_RPC);\n    console.log(\"üì° Using Scroll RPC:\", SCROLL_RPC);\n    \n    const userSigner = privateKeyToAccount(privateKey);\n    console.log(\"‚úÖ EOA address:\", userSigner.address);\n\n    const ecdsaValidator = await signerToEcdsaValidator(publicClient, {\n      signer: userSigner,\n      entryPoint,\n      kernelVersion: KERNEL_V3_1,\n    });\n\n    const account = await createKernelAccount(publicClient, {\n      entryPoint,\n      plugins: {\n        sudo: ecdsaValidator,\n      },\n      kernelVersion: KERNEL_V3_1,\n    });\n\n    console.log(\"‚úÖ Smart account address:\", account.address);\n\n    const zerodevPaymaster = createZeroDevPaymasterClient({\n      chain,\n      transport: http(ZERODEV_RPC),\n    });\n\n    const kernelClient = createKernelAccountClient({\n      account,\n      chain,\n      bundlerTransport: http(ZERODEV_RPC),\n      paymaster: {\n        getPaymasterData(userOperation) {\n          console.log(\"üîÑ Getting paymaster data...\");\n          return zerodevPaymaster.sponsorUserOperation({ userOperation });\n        },\n      },\n    });\n\n    const currentBalance = await publicClient.readContract({\n      address: contractAddress,\n      abi: contractABI,\n      functionName: \"balanceOf\",\n      args: [account.address],\n    });\n    console.log(\"üìä Current NFT balance:\", currentBalance);\n\n    // THe call data of the UserOp\n    const userOpHash = await kernelClient.sendUserOperation({\n      callData: await kernelClient.account.encodeCalls([\n        {\n          to: contractAddress,\n          value: BigInt(0),\n          data: encodeFunctionData({\n            abi: contractABI,\n            functionName: \"safeMint\",\n            args: [account.address],\n          }),\n        },\n      ]),\n    });\n    console.log(\"‚úÖ UserOp submitted:\", userOpHash);\n\n    const receipt = await kernelClient.waitForUserOperationReceipt({\n      hash: userOpHash,\n    });\n    console.log(\"‚úÖ Transaction confirmed:\", receipt.receipt.transactionHash);\n\n    const newBalance = await publicClient.readContract({\n      address: contractAddress,\n      abi: contractABI,\n      functionName: \"balanceOf\",\n      args: [account.address],\n    });\n    console.log(\"üìä New NFT balance:\", newBalance);\n\n    return { \n      success: true, \n      transactionHash: receipt.receipt.transactionHash,\n      newBalance: Number(newBalance)\n    };\n    \n  } catch (error) {\n    console.error(\"‚ùå Detailed minting error:\", error);\n    const errorMessage = error instanceof Error ? error.message : \"Unknown error\";\n    return { \n      success: false, \n      error: errorMessage,\n      transactionHash: null,\n      newBalance: null\n    };\n  }\n};"],"names":[],"mappings":";;;;AAWoB;AAXpB;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAKA;;;;;;;AAEA,MAAM;AACN,MAAM;AAEN,MAAM,kBAAkB;AACxB,MAAM,cAAc,IAAA,sLAAQ,EAAC;IAC3B;IACA;CACD;AAED,MAAM,QAAQ,0LAAa;AAE3B,MAAM,eAAe,IAAA,sLAAkB,EAAC;IACtC,WAAW,IAAA,wKAAI,EAAC;IAChB;AACF;AAEA,MAAM,aAAa,IAAA,yKAAa,EAAC;AAE1B,MAAM,UAAU,OAAO;IAC5B,IAAI;QACF,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC,yBAAyB;QACrC,QAAQ,GAAG,CAAC,wBAAwB;QAEpC,MAAM,aAAa,IAAA,yLAAmB,EAAC;QACvC,QAAQ,GAAG,CAAC,kBAAkB,WAAW,OAAO;QAEhD,MAAM,iBAAiB,MAAM,IAAA,8MAAsB,EAAC,cAAc;YAChE,QAAQ;YACR;YACA,eAAe,uKAAW;QAC5B;QAEA,MAAM,UAAU,MAAM,IAAA,+MAAmB,EAAC,cAAc;YACtD;YACA,SAAS;gBACP,MAAM;YACR;YACA,eAAe,uKAAW;QAC5B;QAEA,QAAQ,GAAG,CAAC,4BAA4B,QAAQ,OAAO;QAEvD,MAAM,mBAAmB,IAAA,yMAA4B,EAAC;YACpD;YACA,WAAW,IAAA,wKAAI,EAAC;QAClB;QAEA,MAAM,eAAe,IAAA,0MAAyB,EAAC;YAC7C;YACA;YACA,kBAAkB,IAAA,wKAAI,EAAC;YACvB,WAAW;gBACT,kBAAiB,aAAa;oBAC5B,QAAQ,GAAG,CAAC;oBACZ,OAAO,iBAAiB,oBAAoB,CAAC;wBAAE;oBAAc;gBAC/D;YACF;QACF;QAEA,MAAM,iBAAiB,MAAM,aAAa,YAAY,CAAC;YACrD,SAAS;YACT,KAAK;YACL,cAAc;YACd,MAAM;gBAAC,QAAQ,OAAO;aAAC;QACzB;QACA,QAAQ,GAAG,CAAC,2BAA2B;QAEvC,8BAA8B;QAC9B,MAAM,aAAa,MAAM,aAAa,iBAAiB,CAAC;YACtD,UAAU,MAAM,aAAa,OAAO,CAAC,WAAW,CAAC;gBAC/C;oBACE,IAAI;oBACJ,OAAO,OAAO;oBACd,MAAM,IAAA,2LAAkB,EAAC;wBACvB,KAAK;wBACL,cAAc;wBACd,MAAM;4BAAC,QAAQ,OAAO;yBAAC;oBACzB;gBACF;aACD;QACH;QACA,QAAQ,GAAG,CAAC,uBAAuB;QAEnC,MAAM,UAAU,MAAM,aAAa,2BAA2B,CAAC;YAC7D,MAAM;QACR;QACA,QAAQ,GAAG,CAAC,4BAA4B,QAAQ,OAAO,CAAC,eAAe;QAEvE,MAAM,aAAa,MAAM,aAAa,YAAY,CAAC;YACjD,SAAS;YACT,KAAK;YACL,cAAc;YACd,MAAM;gBAAC,QAAQ,OAAO;aAAC;QACzB;QACA,QAAQ,GAAG,CAAC,uBAAuB;QAEnC,OAAO;YACL,SAAS;YACT,iBAAiB,QAAQ,OAAO,CAAC,eAAe;YAChD,YAAY,OAAO;QACrB;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAC9D,OAAO;YACL,SAAS;YACT,OAAO;YACP,iBAAiB;YACjB,YAAY;QACd;IACF;AACF","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///home/sandile/NFT_App/src/app/dashboard/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { useUser } from '@/context/UserContext';\nimport { useAuth } from '@/hooks/useAuth';\nimport { mintNFT } from '@/utils/mintNFT';\n\ninterface NFT {\n  id: number;\n  name: string;\n  description: string;\n  image: string;\n  charity?: string;\n  charityId?: number;\n  price?: string;\n  emoji?: string;\n  color?: string;\n}\n\nexport default function Dashboard() {\n  const [nfts, setNfts] = useState<NFT[]>([]);\n  const [userNfts, setUserNfts] = useState<NFT[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState<'available' | 'owned'>('available');\n  const [mintingStatus, setMintingStatus] = useState<{ [key: number]: string }>({});\n  const [showScrollDemo, setShowScrollDemo] = useState(false);\n  const { currentUser, logout, updateUserNFTs } = useUser();\n  \n  useAuth();\n\n  const fetchNFTs = async () => {\n    if (!currentUser) return;\n\n    try {\n      const response = await fetch('/nft_metadata.json');\n      const data = await response.json();\n      const charityData = data.charities || [];\n      \n      const nftsWithCharity = [];\n      const totalNfts = charityData.length;\n      \n      for (let i = 0; i < totalNfts; i++) {\n        const charity = charityData[i];\n        \n        nftsWithCharity.push({\n          id: i + 1,\n          name: `${charity.name} NFT #${i + 1}`,\n          description: `This exclusive NFT supports ${charity.name}. ${charity.description}`,\n          image: '',\n          charity: charity.name,\n          charityId: charity.id,\n          price: charity.price,\n          emoji: charity.emoji,\n          color: charity.color\n        });\n      }\n      \n      setNfts(nftsWithCharity);\n      \n      if (currentUser.ownedNFTs) {\n        const ownedNfts = nftsWithCharity.filter(nft => \n          currentUser.ownedNFTs?.includes(nft.id)\n        );\n        setUserNfts(ownedNfts);\n      }\n      \n    } catch (error) {\n      console.error('Error fetching NFTs:', error);\n      const fallbackNfts: NFT[] = [];\n      const fallbackCharities = [\n        { id: 1, name: \"Default Charity\", description: \"Supporting good causes\", price: \"0.1 ETH\", emoji: \"‚ù§Ô∏è\", color: \"bg-red-500\" }\n      ];\n      \n      for (let i = 0; i < 10; i++) {\n        const charityIndex = i % fallbackCharities.length;\n        const charity = fallbackCharities[charityIndex];\n        \n        fallbackNfts.push({\n          id: i,\n          name: `${charity.name} NFT #${i}`,\n          description: `This NFT supports ${charity.name}.`,\n          image: '',\n          charity: charity.name,\n          charityId: charity.id,\n          price: charity.price,\n          emoji: charity.emoji,\n          color: charity.color\n        });\n      }\n      setNfts(fallbackNfts);\n      \n      if (currentUser.ownedNFTs) {\n        const ownedNfts = fallbackNfts.filter(nft => \n          currentUser.ownedNFTs?.includes(nft.id)\n        );\n        setUserNfts(ownedNfts);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchNFTs();\n  }, [currentUser]);\n\n  const handleMint = async (nftId: number) => {\n    if (!currentUser?.privateKey) {\n      console.log('User not authenticated or private key missing');\n      return;\n    }\n\n    setMintingStatus(prev => ({ ...prev, [nftId]: 'minting' }));\n\n    try {\n      const result = await mintNFT(currentUser.privateKey as `0x${string}`);\n      \n      if (result.success) {\n        setMintingStatus(prev => ({ ...prev, [nftId]: 'success' }));\n        const success = await updateUserNFTs(nftId);\n        \n        if (success) {\n          const mintedNft = nfts.find(nft => nft.id === nftId);\n          if (mintedNft) {\n            setUserNfts(prev => [...prev, mintedNft]);\n          }\n          console.log(`NFT #${nftId} minted successfully! Transaction: ${result.transactionHash}`);\n        }\n      } else {\n        setMintingStatus(prev => ({ ...prev, [nftId]: 'error' }));\n        console.log('Minting failed');\n      }\n    } catch (error) {\n      console.error('Minting error:', error);\n      setMintingStatus(prev => ({ ...prev, [nftId]: 'error' }));\n      console.log('Minting failed: ' + (error as Error).message);\n    } finally {\n      setTimeout(() => {\n        setMintingStatus(prev => ({ ...prev, [nftId]: '' }));\n      }, 3000);\n    }\n  };\n\n  const viewOnScroll = () => {\n    if (userNfts.length === 0) {\n      alert(\"You don't have any NFTs to view on Scroll yet. Mint one first!\");\n      return;\n    }\n    setShowScrollDemo(true);\n  };\n\n  const openScrollExplorer = () => {\n    // This would open the actual Scroll explorer with the user's address\n    if (currentUser?.smartAccountAddress) {\n      const explorerUrl = `https://sepolia.scrollscan.com/address/${currentUser.smartAccountAddress}`;\n      window.open(explorerUrl, '_blank');\n    }\n    setShowScrollDemo(false);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-[#F7C6D9] to-[#FFEFF3] flex items-center justify-center\">\n        <div className=\"text-gray-700 text-xl flex items-center\">\n          <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-pink-500 mr-3\"></div>\n          Loading your NFTs...\n        </div>\n      </div>\n    );\n  }\n\n  if (!currentUser) {\n    return null;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-[#F7C6D9] to-[#FFEFF3]\">\n      {/* Scroll Demo Modal */}\n      {showScrollDemo && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-2xl p-6 max-w-md w-full border border-white/30\">\n            <div className=\"text-center\">\n              <div className=\"text-4xl mb-4\">üîç</div>\n              <h3 className=\"text-xl font-bold text-gray-700 mb-2\">View Your NFTs on Scroll</h3>\n              <p className=\"text-gray-600 mb-4\">\n                Follow these steps to view your NFTs on the Scroll blockchain explorer:\n              </p>\n              \n              <div className=\"text-left bg-gray-50 rounded-lg p-4 mb-6\">\n                <div className=\"flex items-center mb-3\">\n                  <div className=\"w-6 h-6 bg-pink-500 text-white rounded-full flex items-center justify-center text-sm font-bold mr-3\">1</div>\n                  <span className=\"text-gray-700\">Click &quot;Open Scroll Explorer&quot; below</span>\n                </div>\n                <div className=\"flex items-center mb-3\">\n                  <div className=\"w-6 h-6 bg-pink-500 text-white rounded-full flex items-center justify-center text-sm font-bold mr-3\">2</div>\n                  <span className=\"text-gray-700\">Click on NFT Transfers</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <div className=\"w-6 h-6 bg-pink-500 text-white rounded-full flex items-center justify-center text-sm font-bold mr-3\">3</div>\n                  <span className=\"text-gray-700\">NFT Transfers Token Transfer Events</span>\n                </div>\n              </div>\n\n              <div className=\"flex gap-3 justify-center\">\n                <button\n                  onClick={() => setShowScrollDemo(false)}\n                  className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={openScrollExplorer}\n                  className=\"px-4 py-2 bg-pink-500 text-white rounded-lg hover:bg-pink-600 transition flex items-center\"\n                >\n                  <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path>\n                  </svg>\n                  Open Scroll Explorer\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Header */}\n      <div className=\"container mx-auto px-4 py-6\">\n        <div className=\"flex flex-col md:flex-row justify-between items-center mb-8 gap-4\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-700\">üé® Your NFT Dashboard</h1>\n            <p className=\"text-purple-800 mt-1\">Support charities through digital collectibles</p>\n          </div>\n          \n          <div className=\"bg-white/60 backdrop-blur-md rounded-xl p-4 border border-white/30\">\n            <div className=\"text-gray-700 text-right\">\n              <p className=\"font-semibold\">{currentUser.username}</p>\n              <p className=\"text-sm text-gray-600\">{userNfts.length} NFTs owned</p>\n              <p className=\"text-xs opacity-80 truncate max-w-xs mt-1\">{currentUser.smartAccountAddress}</p>\n              <div className=\"flex gap-2 mt-3 justify-end\">\n                <button \n                  onClick={viewOnScroll}\n                  className=\"px-3 py-1 bg-blue-500 text-white rounded-lg text-sm hover:bg-blue-600 transition flex items-center\"\n                  title=\"View your NFTs on Scroll blockchain\"\n                >\n                  <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path>\n                  </svg>\n                  View on Scroll\n                </button>\n                <button \n                  onClick={logout}\n                  className=\"px-3 py-1 bg-red-500 text-white rounded-lg text-sm hover:bg-red-600 transition\"\n                >\n                  Logout\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mb-8\">\n          <Link \n            href=\"/\"\n            className=\"bg-pink-500 text-white px-4 py-2 rounded-lg hover:bg-pink-600 transition inline-flex items-center border border-white/20\"\n          >\n            <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"></path>\n            </svg>\n            Back to Home\n          </Link>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"flex mb-8 bg-pink-500 backdrop-blur-md rounded-xl p-1 border border-white/20 w-fit\">\n          <button\n            onClick={() => setActiveTab('available')}\n            className={`px-6 py-2 rounded-lg transition ${\n              activeTab === 'available' \n                ? 'bg-white text-pink-600' \n                : 'text-white hover:text-white/90'\n            }`}\n          >\n            Available NFTs\n          </button>\n          <button\n            onClick={() => setActiveTab('owned')}\n            className={`px-6 py-2 rounded-lg transition ${\n              activeTab === 'owned' \n                ? 'bg-white text-pink-600' \n                : 'text-white hover:text-white/90'\n            }`}\n          >\n            Your Collection ({userNfts.length})\n          </button>\n        </div>\n\n        {/* Available NFTs */}\n        {activeTab === 'available' && (\n          <div className=\"mb-8\">\n            <header className=\"bg-pink-500 backdrop-blur-md rounded-xl p-6 mb-8 text-center border border-white/20\">\n              <h1 className=\"text-3xl md:text-4xl font-bold text-white mb-2\">üåä NFT Charity Collection</h1>\n              <p className=\"text-pink-100 text-lg\">Explore and support charitable causes through digital collectibles</p>\n            </header>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {nfts.map((nft) => {\n                const isOwned = userNfts.some(owned => owned.id === nft.id);\n                const status = mintingStatus[nft.id];\n                \n                return (\n                  <div\n                    key={nft.id}\n                    className=\"bg-white/50 backdrop-blur-md border border-white/30 rounded-2xl overflow-hidden transition-all duration-300 hover:shadow-xl hover:-translate-y-1 h-[400px] flex flex-col group\"\n                  >\n                    <div className={`h-3/5 bg-gradient-to-br ${nft.color} flex items-center justify-center`}>\n                      <span className=\"text-6xl\">{nft.emoji}</span>\n                    </div>\n                    \n                    <div className=\"p-4 flex flex-col flex-grow\">\n                      <h3 className=\"text-xl font-bold text-gray-700 mb-2\">{nft.name}</h3>\n                      <p className=\"text-gray-600 text-sm mb-4 flex-grow\">{nft.description}</p>\n                      \n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-gray-700 font-bold\">{nft.price}</span>\n                        <span className=\"bg-white/90 text-gray-700 text-xs px-3 py-1 rounded-full\">\n                          {nft.charity}\n                        </span>\n                      </div>\n\n                      {/* Mint Button */}\n                      {!isOwned && (\n                        <button\n                          onClick={() => handleMint(nft.id)}\n                          disabled={status === 'minting' || status === 'success'}\n                          className={`w-full mt-3 py-2 px-4 rounded-lg font-semibold transition-all duration-300 ${\n                            status === 'minting' \n                              ? 'bg-gray-400 text-white cursor-not-allowed' \n                              : status === 'success'\n                              ? 'bg-green-500 text-white'\n                              : status === 'error'\n                              ? 'bg-red-500 text-white'\n                              : 'bg-pink-500 text-white hover:bg-pink-600'\n                          }`}\n                        >\n                          {status === 'minting' ? (\n                            <div className=\"flex items-center justify-center\">\n                              <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                              Minting...\n                            </div>\n                          ) : status === 'success' ? (\n                            '‚úì Minted!'\n                          ) : status === 'error' ? (\n                            'Try Again'\n                          ) : (\n                            'Mint NFT'\n                          )}\n                        </button>\n                      )}\n\n                      {/* Owned Badge */}\n                      {isOwned && (\n                        <div className=\"w-full mt-3 py-2 px-4 bg-green-500 text-white rounded-lg text-center font-semibold\">\n                          ‚úì Owned\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n\n        {/* User's NFT Collection */}\n        {activeTab === 'owned' && (\n          <div>\n            <header className=\"bg-pink-500 backdrop-blur-md rounded-xl p-6 mb-8 text-center border border-white/20\">\n              <h1 className=\"text-3xl md:text-4xl font-bold text-white mb-2\">üåü Your NFT Collection</h1>\n              <p className=\"text-pink-100 text-lg\">Your charitable digital collectibles</p>\n            </header>\n\n            {userNfts.length > 0 ? (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {userNfts.map((nft) => (\n                  <div\n                    key={nft.id}\n                    className=\"bg-white/50 backdrop-blur-md border border-white/30 rounded-2xl overflow-hidden transition-all duration-300 hover:shadow-xl hover:-translate-y-1 h-[400px] flex flex-col group\"\n                  >\n                    <div className={`h-3/5 bg-gradient-to-br ${nft.color} flex items-center justify-center`}>\n                      <span className=\"text-6xl transform group-hover:scale-110 transition-transform duration-300\">\n                        {nft.emoji}\n                      </span>\n                    </div>\n                    \n                    <div className=\"p-4 flex flex-col flex-grow\">\n                      <h3 className=\"text-xl font-bold text-gray-700 mb-2\">{nft.name}</h3>\n                      <p className=\"text-gray-600 text-sm mb-4 flex-grow\">{nft.description}</p>\n                      \n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-gray-700 font-bold\">{nft.price}</span>\n                        <span className=\"bg-white/90 text-gray-700 text-xs px-3 py-1 rounded-full\">\n                          {nft.charity}\n                        </span>\n                      </div>\n                      \n                      <div className=\"w-full mt-3 py-2 px-4 bg-green-500 text-white rounded-lg text-center font-semibold\">\n                        ‚úì Owned\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"bg-white/50 backdrop-blur-md border border-white/30 rounded-2xl p-8 text-center\">\n                <div className=\"text-6xl mb-4\">üé®</div>\n                <p className=\"text-gray-700 text-lg mb-4\">You don&apos;t own any NFTs yet.</p>\n                <p className=\"text-gray-600 mb-6\">Mint your first NFT to support a charitable cause!</p>\n                <button\n                  onClick={() => setActiveTab('available')}\n                  className=\"bg-pink-500 text-white py-2 px-6 rounded-lg hover:bg-pink-600 transition\"\n                >\n                  Browse NFTs\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}