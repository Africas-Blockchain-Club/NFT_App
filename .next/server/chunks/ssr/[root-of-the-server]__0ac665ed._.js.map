{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///home/sandile/NFT_App/src/context/UserContext.tsx"],"sourcesContent":["'use client';\n\nimport Navbar from '@/components/Navbar';\n\n\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\n// Remove the id field from the User interface\ninterface User {\n  username: string;\n  password: string;\n  privateKey: string;\n  smartAccountAddress: string;\n  createdAt: string;\n  ownedNFTs: number[];\n}\n\n\ninterface UserContextType {\n  currentUser: User | null;\n  login: (username: string, password: string) => Promise<boolean>;\n  logout: () => void;\n  users: User[];\n  updateUserNFTs: (nftId: number) => Promise<boolean>; \n  refreshUsers: () => Promise<void>; \n}\n\nconst UserContext = createContext<UserContextType | undefined>(undefined);\n\nexport function UserProvider({ children }: { children: ReactNode }) {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [users, setUsers] = useState<User[]>([]);\n\n  // Load users and current user from localStorage on mount\n  useEffect(() => {\n    loadUsersData();\n  }, []);\n\nconst loadUsersData = async () => {\n  try {\n    // First, try to get users from localStorage (your updated data)\n    const localUserData = localStorage.getItem('userData');\n    \n    if (localUserData) {\n      // Use localStorage data if available (most recent)\n      const usersData = JSON.parse(localUserData);\n      setUsers(usersData);\n    } else {\n      // Fallback to the initial JSON file (first load)\n      const response = await fetch('data/users.json');\n      const usersData = await response.json();\n      setUsers(usersData);\n      // Save initial data to localStorage\n      localStorage.setItem('userData', JSON.stringify(usersData));\n    }\n    \n    // Check if there's a logged-in user in localStorage\n    const savedUser = localStorage.getItem('currentUser');\n    if (savedUser) {\n      const parsedUser = JSON.parse(savedUser);\n      \n      // IMPORTANT: Sync with the latest user data from localStorage\n      if (localUserData) {\n        const currentUsers = JSON.parse(localUserData);\n        const latestUserData = currentUsers.find((u: User) => u.username === parsedUser.username);\n        if (latestUserData) {\n          setCurrentUser(latestUserData);\n          localStorage.setItem('currentUser', JSON.stringify(latestUserData));\n        } else {\n          setCurrentUser(parsedUser);\n        }\n      } else {\n        setCurrentUser(parsedUser);\n      }\n    }\n  } catch (error) {\n    console.error('Error loading users:', error);\n  }\n};\n  // NEW: Function to refresh users data\n  const refreshUsers = async () => {\n    await loadUsersData();\n  };\n\nconst updateUserNFTs = async (nftId: number): Promise<boolean> => {\n  console.log(\"Got into UserContext.tsx\");\n  console.log(\"Current username: \", currentUser?.username);\n  console.log(\"Current user nfts:\", currentUser?.ownedNFTs);\n  \n  if (!currentUser) return false;\n\n  try {\n    if (currentUser.ownedNFTs.includes(nftId)) {\n      console.log(\"NFT already owned by user\");\n      return true;\n    }\n\n    console.log(\"Updating   NFTs for user:\", currentUser.username);\n    \n    // 1. Update currentUser\n    const updatedUser = {\n      ...currentUser,\n      ownedNFTs: [...currentUser.ownedNFTs, nftId]\n    };\n    \n    console.log(\"Updated user:\", updatedUser);\n    setCurrentUser(updatedUser);\n    localStorage.setItem('currentUser', JSON.stringify(updatedUser));\n\n    // 2. Update the users array\n    const updatedUsers = users.map(user => \n      user.username === currentUser.username\n        ? { ...user, ownedNFTs: [...user.ownedNFTs, nftId] }\n        : user\n    );\n\n    setUsers(updatedUsers);\n    \n    // 3. Store updated users in localStorage (this is your main data source now)\n    localStorage.setItem('userData', JSON.stringify(updatedUsers));\n\n    console.log(\"Successfully updated user NFTs in localStorage\");\n    return true;\n  } catch (error) {\n    console.error('Error updating NFTs:', error);\n    return false;\n  }\n};\n\n  const login = async (username: string, password: string): Promise<boolean> => {\n    try {\n      const user = users.find(\n        u => u.username === username && u.password === password\n      );\n\n      if (user) {\n        setCurrentUser(user);\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('currentUser');\n  };\n\n  return (\n    <UserContext.Provider value={{ \n      currentUser, \n      login, \n      logout, \n      users,\n      updateUserNFTs,\n      refreshUsers   \n    }}>\n      {children}\n    </UserContext.Provider>\n  );\n}\n\nexport function useUser() {\n  const context = useContext(UserContext);\n  if (context === undefined) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///home/sandile/NFT_App/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,QAAQ;;KAElC;IACL,IAAIF,QAAQC,GAAG,CAACK,yBAAyB,EAAE;;SAcpC;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;QAGT,OAAO;;IAOT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file:///home/sandile/NFT_App/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///home/sandile/NFT_App/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.React\n"],"names":["module","exports","require","vendored","React"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,KAAK","ignoreList":[0],"debugId":null}}]
}